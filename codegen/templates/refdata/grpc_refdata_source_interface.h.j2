{#
  // codegen-metadata
  // output_path: ARQLib/ARQGrpc/inc/grpc_refdata_source_interface.h
#}
// THIS FILE IS AUTO-GENERATED BY THE CODE-GEN SCRIPT. DO NOT EDIT.
// Defines the interface for a gRPC Reference Data source.

#pragma once
#include <ARQGrpc/dll.h>

#include <ARQUtils/time.h>
#include <ARQCore/refdata_entities.h>
#include <ARQCore/refdata_source_interface.h>

namespace ARQ
{

class GrpcRefDataSource : public RefDataSource
{
public:
    GrpcRefDataSource( const std::string_view dsh )
        : m_dsh( dsh )
    {}
	virtual ~GrpcRefDataSource() = default;

    {% for entity in entities %}
    // --- Methods for {{ entity.name }} ({{ entity.type_string }}) ---
    [[nodiscard]] ARQGrpc_API std::vector<RDEntities::{{ entity.name }}> fetch{{ entity.name_plural }}() override;
    [[nodiscard]] ARQGrpc_API std::optional<RDEntities::{{ entity.name }}> fetch{{ entity.name }}( const RDEntities::Traits<RDEntities::{{ entity.name }}>::KeyType& {{ entity.key }} ) override;
    [[nodiscard]] ARQGrpc_API std::vector<RDEntities::{{ entity.name }}> fetchAsOf{{ entity.name_plural }}( const Time::DateTime asof ) override;
    ARQGrpc_API void upsert{{ entity.name_plural }}( const std::vector<RDEntities::{{ entity.name }}>& data ) override;

    {% endfor %}
private:
    std::string m_dsh;
};

}