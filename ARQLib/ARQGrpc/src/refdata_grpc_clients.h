// THIS FILE IS AUTO-GENERATED BY THE CODE-GEN SCRIPT. DO NOT EDIT.
// Contains gRPC client stub definitions for Reference Data services.

#pragma once

#include <ARQCore/refdata_entities.h>

#include <proto_gen/refdata_protobuf.grpc.pb.h>

#include <grpc++/grpc++.h>

namespace ARQ
{
namespace Grpc
{
namespace RefData
{

class RefDataReaderClient
{
public:
    RefDataReaderClient( std::shared_ptr<grpc::Channel> channel )
        : m_stub( RefDataReader::NewStub( channel ) )
    {
    }

    // --- Methods for Currency (CCY) ---
    std::vector<RDEntities::Currency> getCurrencies();
    std::optional<RDEntities::Currency> getCurrency( const RDEntities::Traits<RDEntities::Currency>::KeyType& ccyID );

    // --- Methods for User (USER) ---
    std::vector<RDEntities::User> getUsers();
    std::optional<RDEntities::User> getUser( const RDEntities::Traits<RDEntities::User>::KeyType& userID );

private:
    std::unique_ptr<RefDataReader::Stub> m_stub;
};

class RefDataGatekeeperClient
{
public:
    RefDataGatekeeperClient( std::shared_ptr<grpc::Channel> channel )
        : m_stub( RefDataGatekeeper::NewStub( channel ) )
    {
    }

    // --- Methods for Currency (CCY) ---
    void upsertCurrencies( const std::vector<RDEntities::Currency>& data );
    using DeactivateCurrencyData = std::pair<RDEntities::Traits<RDEntities::Currency>::KeyType /* key */, uint32_t /* version */>;
    void deactivateCurrencies( const std::vector<DeactivateCurrencyData>& data );

    // --- Methods for User (USER) ---
    void upsertUsers( const std::vector<RDEntities::User>& data );
    using DeactivateUserData = std::pair<RDEntities::Traits<RDEntities::User>::KeyType /* key */, uint32_t /* version */>;
    void deactivateUsers( const std::vector<DeactivateUserData>& data );

private:
    std::unique_ptr<RefDataGatekeeper::Stub> m_stub;
};

}
}
}